var tipuesearch = {"pages": [{'title': 'About', 'text': '課程名稱: 協同產品設計實習 - Collaborative Product Design Practice \n 學員作業網站:  https://mdecd2025.github.io/hw-41223105/ \n 學員作業倉儲:  https://github.com/mdecd2025/hw-41223105 \n \n 課程代號: cd2025 \n Teams 線上教學: \n 以 "學號@nfu.edu.tw" 登入 \xa0 https://login.microsoftonline.com/ \xa0 Office 365 \n Teams 團隊代碼:\xa0 p5z4eku \n \n 課程評分: \n Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單 \n Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單 \n Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單 \n', 'tags': '', 'url': 'About.html'}, {'title': 'List', 'text': '2a-g8 \n', 'tags': '', 'url': 'List.html'}, {'title': 'Tasks', 'text': '', 'tags': '', 'url': 'Tasks.html'}, {'title': 'Task1', 'text': '', 'tags': '', 'url': 'Task1.html'}, {'title': 'Task2', 'text': '', 'tags': '', 'url': 'Task2.html'}, {'title': 'Task3', 'text': '', 'tags': '', 'url': 'Task3.html'}, {'title': 'Task4', 'text': '', 'tags': '', 'url': 'Task4.html'}, {'title': 'Task5', 'text': '3.請摘要出下列內容: (放入英文文章內容) \n A: \n Here’s a summary of the key points about Webots: \n \n \n What is Webots?  Webots is a professional simulation software for mobile robots that allows users to create 3D virtual environments with physical properties. It supports robots with different locomotion types (wheeled, legged, flying) and various sensors/actuators. Users can program robots to perform specific behaviors and simulate them in realistic environments. \n \n \n Applications:  Webots is widely used in research and education, particularly for: \n \n Mobile robot prototyping \n Locomotion research (e.g., legged robots, humanoids) \n Multi-agent and adaptive behavior research (e.g., swarm intelligence, neural networks) \n Teaching robotics (programming in languages like C, Python, Java) \n Robotics competitions \n \n \n \n What You Need to Know:  Basic knowledge of programming languages (C, C++, Java, Python, MATLAB) is required for writing robot controllers. Basic knowledge of 3D graphics and VRML97 is needed for creating custom robot models or objects. \n \n \n User Support:  Cyberbotics offers paid support. For community-based support, users can turn to Robotics StackExchange, GitHub Discussions, GitHub Issues, and Discord. \n \n \n Simulation Components:  A Webots simulation consists of: \n \n A world file (.wbt) that defines the robots and their environment. \n Controller programs written in supported languages (C/C++, Java, Python, MATLAB). \n Optional physics plugins for custom behavior. \n \n \n \n World and Controller:  A world in Webots describes the robots and their environment (position, appearance, physics, etc.). The controller is a program that controls the robot’s actions, and each robot can have a separate controller. \n \n \n Supervisor Controller:  A Supervisor controller is a special type of controller that allows for privileged operations, like controlling the simulation, changing robot positions, or capturing videos, and is used to oversee robot actions. \n \n \n \n 4.請列出上述文章中的重要的英文單字與解釋, 以及出現在文句中的用法: \n A:以下是文章中重要的英文單字與解釋，以及它們在文句中的用法： \n 1.  Simulation (模擬) \n \n 定義 : 模仿現實世界過程或系統的過程。 \n 用法 : "Webots is a professional mobile robot simulation software package." \n 解釋 : 指的是創建虛擬環境來重現現實世界機器人行為，用於測試和實驗。 \n \n 2.  Prototyping (原型設計) \n \n 定義 : 創建產品或系統的初步模型或原型。 \n 用法 : "It offers a rapid prototyping environment." \n 解釋 : 指快速創建機器人模型並測試其功能的過程。 \n \n 3.  Locomotion (運動機制) \n \n 定義 : 機器人的移動能力或移動方式。 \n 用法 : "These robots can have different locomotion schemes (wheeled robots, legged robots, or flying robots)." \n 解釋 : 指機器人如何移動，如使用輪子、腿部或飛行方式。 \n \n 4.  Sensors (感測器) \n \n 定義 : 探測環境變化並將資訊傳送給機器人的設備。 \n 用法 : "They may be equipped with a number of sensor and actuator devices, such as distance sensors, cameras, motors, touch sensors, emitters, receivers, etc." \n 解釋 : 指機器人上用來收集數據的設備，如攝像頭和距離感測器。 \n \n 5.  Actuators (執行器) \n \n 定義 : 負責移動或控制機器人系統的設備。 \n 用法 : "Actuators like drive wheels, motors, touch sensors are used." \n 解釋 : 指機器人上能夠實際移動機器人的部件，如馬達或輪子。 \n \n 6.  Controller (控制器) \n \n 定義 : 控制機器人行為的程式或系統。 \n 用法 : "Webots contains a large number of robot models and controller program examples." \n 解釋 : 指管理和指導機器人行動的軟體或代碼。 \n \n 7.  Interface (介面) \n \n 定義 : 允許兩個系統進行通信的共享邊界或連接。 \n 用法 : "Webots also contains a number of interfaces to real mobile robots." \n 解釋 : 指 Webots 能夠與現實世界機器人連接並在模擬後控制它們。 \n \n 8.  Neural Networks (神經網絡) \n \n 定義 : 一種模仿人類大腦的算法系統，用於模式識別。 \n 用法 : "Adaptive behavior research (genetic algorithm, neural networks, AI, etc.)." \n 解釋 : 指基於學習算法的人工智慧技術，常用來模擬智能行為。 \n \n 9.  Supervisor (監督控制器) \n \n 定義 : 一種特殊類型的控制器，可以執行某些只有人類操作員才能進行的操作。 \n 用法 : "The Supervisor controller is the controller of a Robot whose supervisor field is set to TRUE." \n 解釋 : 指能夠執行如控制模擬或隨機移動機器人的操作的控制器。 \n \n 10.  VRML97 (VRML97 語言) \n \n 定義 : 虛擬現實建模語言，一種用於表示 3D 互動矢量圖形的檔案格式。 \n 用法 : "Basic knowledge of 3D computer graphics and VRML97 description language." \n 解釋 : 指用於描述 Webots 中的 3D 模型或從 3D 建模軟體匯入它們的語言。 \n \n 11.  Plugin (插件) \n \n 定義 : 一種軟體組件，用於擴展大型軟體應用程式的特定功能。 \n 用法 : "An optional physics plugin that can be used to modify Webots regular physics behavior." \n 解釋 : 指一種能增強 Webots 功能的額外工具或擴展模組，通過改變物理行為來調整模擬。 \n \n 12.  API (應用程式介面) \n \n 定義 : 允許不同軟體應用程式之間進行互動的一組函式和協議。 \n 用法 : "Robots can be programmed using simple APIs." \n 解釋 : 指使程式員能夠與 Webots 進行程式互動的接口。 \n \n 13.  Hierarchical (層級的) \n \n 定義 : 一種組織系統，其中項目按照層次或層級進行排名或組織。 \n 用法 : "Worlds are organized as hierarchical structures where objects can contain other objects." \n 解釋 : 指 Webots 中世界物件的層級結構，物件可以包含其他物件（例如，一個機器人可能包含傳感器或輪子）。 \n \n 14.  Interpreter (解釋器) \n \n 定義 : 一種直接逐行執行程式碼而不是先編譯的程式。 \n 用法 : "Some programming languages need to be interpreted (Python and MATLAB)." \n 解釋 : 指執行語言程式碼的過程，如 Python 在運行時進行解釋執行，而不是先編譯成機器碼。 \n \n 15.  Debugging (除錯) \n \n 定義 : 識別並修正軟體程式碼中的問題的過程。 \n 用法 : "GitHub Issues should be used only to report bugs found in Webots." \n 解釋 : 指識別並解決 Webots 或模擬環境中的錯誤或漏洞。 \n \n 這些單字對於理解 Webots 的運作及描述其功能至關重要。', 'tags': '', 'url': 'Task5.html'}, {'title': 'Task6', 'text': 'Task7 \n', 'tags': '', 'url': 'Task6.html'}, {'title': 'Homework', 'text': '作業 (30%) \n HW1 (5%):  建立由 Box 組成的平面四連桿機構 Webots 模擬場景 \n part1: \n 請各學員在 USB 隨身碟或個人電腦上完成 cd2025 課程所需的可攜系統配置: \n 下載  portable_wcm2025.7z  (330MB, 解開壓縮後 1.4GB) \n Webots_2025a.7z  (1.5 GB, 解開後約為 2.9GB, 可單獨運作) \n Webots_2025a_web.7z  (171 MB, 解開壓縮後約為 1GB, 必須連網運作) \n Blender4.2.7z \n part2: \n 請各學員完成可攜程式系統配置後, 利用 Webots R2025a 中寬度與高度都為 0.1m 的 box 物件建立一個簡單的平面四連桿機構模擬場景. \n base (基座) 長度 1m, link1 長度 0.4m, link2 長度 0.6m, link3 長度 0.9m, 各轉軸均為 HingeJoint, joint1 旋轉速度設定為 1radian/sec. \n part3: \n 模擬場景啟動後, 按下 s 鍵機構開始作動, 按下 p 鍵後機構暫停. \n 參考資料: \n cd2025_hw1_demo.7z \n HW2 (5%):  建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景 \n 各學員請利用 CAD 系統依據 HW1 的連桿尺寸與運動方式, 配置適當大小的旋轉軸以及基座後, 利用 Webots R2025a 完成一個簡單的平面四連桿機構模擬場景. \n 參考資料: \n fourbar_slvs.7z \n HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統 \n 請各分組利用CAD 系統建立一個能在電腦桌 (1600W X 700D X 740H mm) 上運作的投籃機構 ( 參考影片 )後, 導入 Webots R2025a 套件, 建立一個能由使用者透過鍵盤按鍵操作, 且具備計分板的籃球遊戲機模擬系統. \n 參考資料: \n 參考資料: \n fourbar_ball_throwing_linkage.slvs \n sixbar_ball_throwing_linkage.slvs \n \n', 'tags': '', 'url': 'Homework.html'}, {'title': 'HW1', 'text': 'HW1 (5%):  建立由 Box 組成的平面四連桿機構 Webots 模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW1 - 學員學號 \n \n', 'tags': '', 'url': 'HW1.html'}, {'title': 'HW2', 'text': 'HW2 (5%):  建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW2 - 學員學號 \n \n', 'tags': '', 'url': 'HW2.html'}, {'title': 'HW3', 'text': 'HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW3 - 學員學號 \n \n', 'tags': '', 'url': 'HW3.html'}, {'title': 'Midterm', 'text': '本課程所繳交的期中成績為學員自評之學習期望成績. \n 期中考週的自評期望成績繳交流程: \n \n 整理先前所完成的各週的進度、作業網頁內容以及心得 \n 拍攝期中自評影片, 上傳至 Youtube 後, 以" 國立虎尾科技大學 - 機械設計工程系 - cd2025 期中自評- 學員學號 "為影片標題後嵌入本頁面中 \n 回填期中自評表單 \n 上傳學員期中成績 \n \n 各週進度: \n 各週網頁內容: \n 期中心得: \n 期中自評影片: \n \n \n', 'tags': '', 'url': 'Midterm.html'}, {'title': 'Exam', 'text': 'Exam1 (10%): 建立 Webots 基本物件模擬場景 \n 各學員利用 Webots R2025a 套件中的 Shape 物件, 隨堂建立指定的機電系統模擬場景, 並利用 Python 程式進行互動控制. \n Exam2 (10%): 利用 CAD 零組件建立模擬場景\xa0 \n 各學員利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. \n Exam3 (20%): Webots 機電模擬場景的協同設計 \n 各分組利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. 過程中各學員必須採同步協同模式, 維護從 Github Classroom 取得的分組協同倉儲以及網站. \n 協同分組方式: \n \n 分配學員負責利用 Solvespace 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁. \n 分配學員負責利用 NX2312 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁. \n 分配學員負責利用 Webots 建立機電系統模擬場景, 並利用 Python 程式進行控制, 過程中必須將建構過程拍成帶有說明字幕的影片上傳至分組網頁. \n \n', 'tags': '', 'url': 'Exam.html'}, {'title': 'Exam1', 'text': 'Exam1 (10%): 建立 Webots 基本物件模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam1 - 學員學號 \n', 'tags': '', 'url': 'Exam1.html'}, {'title': 'Exam2', 'text': 'Exam2 (10%): 利用 CAD 零組件建立模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam2 - 學員學號 \n', 'tags': '', 'url': 'Exam2.html'}, {'title': 'Exam3', 'text': 'Exam3 (20%): Webots 機電模擬場景的協同設計 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3 - 學員學號 \n', 'tags': '', 'url': 'Exam3.html'}, {'title': 'Final', 'text': '期末協同專案執行過程影片、簡報與 PDf 報告檔案 (六人一組) (30%) \n 題目:  Webots 動態投籃模擬系統的協同設計 \n 說明:  \n 籃框架被配置在一定範圍內, 可隨機慢速前進、後退及左右擺動, 投籃機構系統帶有一定數量的籃球, 被配置在可自由移動的輪車上. \n 操作者可利用鍵盤特定按鍵控制投籃輪車的移動並發射投籃, 每投出一球後系統透過記分板進行計分, 並由送球機構進行補球或移動輪車取球, 遊戲可進行至全部數量籃球投完為止. \n 請將期末協同專案執行過程、內容與心得, 製作成影片，配合字幕上傳至 Youtube 後嵌入各階段的期末報告頁面中. \n 影片標題:  國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 學員學號 - 各階段影片主題 \n', 'tags': '', 'url': 'Final.html'}, {'title': 'Brython', 'text': '1 add to 100 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};